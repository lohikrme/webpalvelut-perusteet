{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-31T12:15:00.288Z",
    "end": "2024-08-31T12:15:00.355Z",
    "duration": 67,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "66e88853-9638-4472-984a-4ed15239c155",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f200da83-f42e-4a4a-b3dd-b08230bcb1fd",
          "title": "/api/customers (POST)",
          "fullFile": "C:\\Users\\Parrot\\viope-webpalvelut\\L03b_customers_postgre\\test\\customer.spec.js",
          "file": "\\test\\customer.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"/api/customers (POST)\"",
              "fullTitle": "/api/customers (POST) \"before each\" hook in \"/api/customers (POST)\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "query.deleteAllCustomers();",
              "err": {},
              "uuid": "c7ef1d11-66bb-4cb0-8d3a-fed173f08438",
              "parentUUID": "f200da83-f42e-4a4a-b3dd-b08230bcb1fd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "add a new customer at POST endpoint '/api/customers'",
              "fullTitle": "/api/customers (POST) add a new customer at POST endpoint '/api/customers'",
              "timedOut": false,
              "duration": 51,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(app)\n    .post(\"/api/customers\")\n    .set('Content-Type', 'application/json')\n    .send(JSON.stringify(example_customer))\n    .end((err, res) => {\n        res.should.have.status(201);\n        res.body.should.be.a('object');\n        res.body.should.have.all.keys(['firstname', 'lastname', 'phone', 'email']);\n        done();\n    })",
              "err": {},
              "uuid": "c013c464-ac35-48ab-a8f4-c4a16bd87cf5",
              "parentUUID": "f200da83-f42e-4a4a-b3dd-b08230bcb1fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c013c464-ac35-48ab-a8f4-c4a16bd87cf5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 51,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fcecb692-6eb5-405d-bb3f-d4f9f751c8a5",
          "title": "fetch all customers at GET endpoint: '/api/customers'",
          "fullFile": "C:\\Users\\Parrot\\viope-webpalvelut\\L03b_customers_postgre\\test\\customer.spec.js",
          "file": "\\test\\customer.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "respond should have status 200",
              "fullTitle": "fetch all customers at GET endpoint: '/api/customers' respond should have status 200",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(app)\n    .get(\"/api/customers\")\n    .end((err, res) => {\n        res.should.have.status(200);\n        done();\n    })",
              "err": {},
              "uuid": "b585426b-4470-4fc1-826e-9fea0578a0df",
              "parentUUID": "fcecb692-6eb5-405d-bb3f-d4f9f751c8a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respond should return an array (of jsons)",
              "fullTitle": "fetch all customers at GET endpoint: '/api/customers' respond should return an array (of jsons)",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(app)\n    .get(\"/api/customers\")\n    .end((err, res) => {\n        res.body.should.be.a('array')\n        done();\n    })",
              "err": {},
              "uuid": "d5cdd7f6-7e9a-4f40-8a28-395112317062",
              "parentUUID": "fcecb692-6eb5-405d-bb3f-d4f9f751c8a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respond should have id, firstname, lastname, email, phone",
              "fullTitle": "fetch all customers at GET endpoint: '/api/customers' respond should have id, firstname, lastname, email, phone",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(app)\n    .get(\"/api/customers\")\n    .end((err, res) => {\n        let firstcustomer = res.body[0];\n        console.log(firstcustomer);\n        expect(firstcustomer).to.have.all.keys(['id', 'firstname', 'lastname', 'email', 'phone']);\n        // use to.have.property('firstname') if u want to check individual keys\n        // all.keys means, u must check for every key of object, not pass a single key, or fail test\n        done();\n    })",
              "err": {},
              "uuid": "61ebc618-f494-438b-bfe0-dc3bc5665e38",
              "parentUUID": "fcecb692-6eb5-405d-bb3f-d4f9f751c8a5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b585426b-4470-4fc1-826e-9fea0578a0df",
            "d5cdd7f6-7e9a-4f40-8a28-395112317062",
            "61ebc618-f494-438b-bfe0-dc3bc5665e38"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}